# Default values for server.llama.cpp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

images:
  server:
    repository: ghcr.io/ggerganov/llama.cpp
    name: server
    tag:
  downloader:
    repository: busybox
    name: 1.36.1
    tag: "glibc"

  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

podAnnotations: { }
podLabels: { }

jobAnnotations: { }
jobLabels: { }

podSecurityContext:
  runAsNonRoot: true

securityContext:
  readOnlyRootFilesystem: false #FIXME
  runAsNonRoot: true
  runAsUser: 1000

model:
  path: /tmp
  alias: microsoft-phi2
  repo: ggml-org/models # TheBloke/phi-2-GGUF
  file: tinyllamas/stories260K.gguf # phi-2.Q4_K_M.gguf
  size: 2Mi # 1.8Gi
  sha256: 047bf46455a544931cff6fef14d7910154c56afbc23ab1c5e56a72e69912c04b # 324356668fa5ba9f4135de348447bb2bbe2467eaa1b8fcfb53719de62fbd2499

server:
  command: /server
  host: 0.0.0.0
  port: 8080
  completions: true
  embeddings: false
  metrics: true
  kvCache:
    size: 64
  slots: 2
  log:
    format: text
    disabled: false
  extraArgs: []

deployments:
  init

service:
  type: ClusterIP
  port: 80

ingresses:
  completions:
    enabled: true
    className: ""
    annotations:
      kubernetes.io/ingress.class: nginx

    hosts:
      - #host: llama-cpp.mydomain
        paths:
          - path: /v1/completions
            pathType: Prefix
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  embeddings:
    enabled: true
    className: ""
    annotations:
      kubernetes.io/ingress.class: nginx

    hosts:
      - #host: llama-cpp.mydomain
        paths:
          - path: /v1/embeddings
            pathType: Prefix
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

resources: { }

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

volumes: [ ]

volumeMounts: [ ]

nodeSelector: { }

tolerations: [ ]

affinity: { }

persistence:
  storageClass: